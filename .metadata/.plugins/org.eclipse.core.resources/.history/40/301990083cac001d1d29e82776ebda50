package com.lcwd.user.service.interceptor;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.oauth2.client.OAuth2AuthorizeRequest;
import org.springframework.security.oauth2.client.OAuth2AuthorizedClientManager;
import org.springframework.security.oauth2.client.registration.ClientRegistrationRepository;
import org.springframework.security.oauth2.client.web.DefaultOAuth2AuthorizedClientManager;
import org.springframework.security.oauth2.client.web.OAuth2AuthorizedClientRepository;
import org.springframework.stereotype.Component;

import feign.RequestInterceptor;
import feign.RequestTemplate;

@Configuration
@Component
public class FeignClientInterceptor implements RequestInterceptor{

	private OAuth2AuthorizedClientManager manager;
	
	@Override
	public void apply(RequestTemplate template) {
		String tokenValue = manager.authorize(OAuth2AuthorizeRequest.withClientRegistrationId("my-internal-client")
				.principal("internal").build()).getRefreshToken().getTokenValue();
		
		template.header("Authorization", "Bearer"+tokenValue);
	}
	//declare the bean of OAuth2Authorized client manager
	@Bean
	public OAuth2AuthorizedClientManager manager(
			ClientRegistrationRepository clientRegistrationRepository,
			OAuth2AuthorizedClientRepository oAuth2AuthorizedClientRepository
			) {
		DefaultOAuth2AuthorizedClientManager defaultOAuth2AuthorizedClientManager = new  DefaultOAuth2AuthorizedClientManager(clientRegistrationRepository,oAuth2AuthorizedClientRepository);
		
		return defaultOAuth2AuthorizedClientManager;
	}

}
